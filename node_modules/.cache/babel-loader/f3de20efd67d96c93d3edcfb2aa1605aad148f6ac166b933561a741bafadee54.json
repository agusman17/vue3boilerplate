{"ast":null,"code":"import AssetForm from '../components/modules/form/AssetForm.vue';\nimport AssetList from '../components/modules/list/asset/AssetList.vue';\nimport { UseAssetStore } from '../store/assets';\nimport axios from \"axios\";\nexport default {\n  name: \"Home\",\n  props: {\n    showAdd: Boolean\n  },\n  components: {\n    AssetForm,\n    AssetList,\n    UseAssetStore\n  },\n  data() {\n    return {\n      assets: [],\n      store: UseAssetStore()\n    };\n  },\n  methods: {\n    async deleteAsset(id) {\n      if (confirm(\"Are you sure ?\")) {\n        const res = await axios.delete(`api/assets/${id}`);\n        res.status === 200 ? this.assets = this.assets.filter(asset => asset.id !== id) : alert(\"Error deleting asset\");\n      }\n    },\n    async addAsset(newAsset) {\n      const res = await axios.post(`api/assets`, newAsset);\n      if (res.status === 201) {\n        alert(\"Data asset has been submit\");\n        this.assets = [...this.assets, res.data];\n      }\n    },\n    async brokenAsset(id) {\n      const filterBroken = await this.fetchAsset(id);\n      const updBroken = {\n        ...filterBroken,\n        broken: !filterBroken.broken\n      };\n      const res = await axios.put(`api/assets/${id}`, updBroken);\n      const data = res.data;\n      this.assets = this.assets.map(asset => asset.id === id ? {\n        ...asset,\n        broken: data.broken\n      } : asset);\n    },\n    async fetchAssets() {\n      await this.store.fetchAssets();\n      return this.store.getAssets;\n    },\n    async fetchAsset(id) {\n      const data = await this.store.fetchAsset(id);\n      return await data;\n    }\n  },\n  async created() {\n    this.assets = await this.fetchAssets();\n  }\n};","map":{"version":3,"names":["AssetForm","AssetList","UseAssetStore","axios","name","props","showAdd","Boolean","components","data","assets","store","methods","deleteAsset","id","confirm","res","delete","status","filter","asset","alert","addAsset","newAsset","post","brokenAsset","filterBroken","fetchAsset","updBroken","broken","put","map","fetchAssets","getAssets","created"],"sources":["/Users/agusmanriyadi/Documents/LATIHAN/VUE 3/vuepractice/src/views/Home.vue"],"sourcesContent":["<template>\n    \n    <AssetForm v-show=\"showAdd\" @action-add=\"addAsset\"/>\n\n    <div class=\"my-2\">\n        <AssetList :assets=\"assets\" @action-delete=\"deleteAsset\" @action-broken=\"brokenAsset\"/>\n    </div>\n\n</template>\n\n<script>\nimport AssetForm from '../components/modules/form/AssetForm.vue'\nimport AssetList from '../components/modules/list/asset/AssetList.vue'\nimport {UseAssetStore} from '../store/assets'\nimport axios from \"axios\"\n\nexport default {\n    name: \"Home\",\n    props:{\n        showAdd: Boolean\n    },\n    components: {\n        AssetForm,\n        AssetList,\n        UseAssetStore\n    },\n    data(){\n        return {\n            assets : [],\n            store : UseAssetStore()\n        }\n    },\n    methods:{\n        async deleteAsset(id){\n            if(confirm(\"Are you sure ?\")){\n                const res = await axios.delete(`api/assets/${id}`)\n\n                res.status === 200 ? (this.assets = this.assets.filter((asset) => asset.id !== id)) : alert(\"Error deleting asset\")\n            }\n        },\n        async addAsset(newAsset){\n\n            const res = await axios.post(`api/assets`, newAsset)\n\n            if(res.status === 201){\n                alert(\"Data asset has been submit\")\n                this.assets = [...this.assets, res.data]\n            }\n\n        },\n        async brokenAsset(id){\n\n            const filterBroken = await this.fetchAsset(id)\n            const updBroken = {...filterBroken, broken: !filterBroken.broken}\n\n            const res = await axios.put(`api/assets/${id}`, updBroken)\n\n            const data = res.data\n\n            this.assets = this.assets.map( (asset) => asset.id === id ? {...asset, broken : data.broken} : asset)\n        },\n        async fetchAssets(){\n            await this.store.fetchAssets()\n            return this.store.getAssets \n        },\n        async fetchAsset(id){\n            const data = await this.store.fetchAsset(id)\n            return await data\n        }\n    },\n    async created(){\n        this.assets = await this.fetchAssets()\n    }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":"AAWA,OAAOA,SAAQ,MAAO,0CAAyC;AAC/D,OAAOC,SAAQ,MAAO,gDAA+C;AACrE,SAAQC,aAAa,QAAO,iBAAgB;AAC5C,OAAOC,KAAI,MAAO,OAAM;AAExB,eAAe;EACXC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAC;IACFC,OAAO,EAAEC;EACb,CAAC;EACDC,UAAU,EAAE;IACRR,SAAS;IACTC,SAAS;IACTC;EACJ,CAAC;EACDO,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,MAAK,EAAI,EAAE;MACXC,KAAI,EAAIT,aAAa,CAAC;IAC1B;EACJ,CAAC;EACDU,OAAO,EAAC;IACJ,MAAMC,WAAWA,CAACC,EAAE,EAAC;MACjB,IAAGC,OAAO,CAAC,gBAAgB,CAAC,EAAC;QACzB,MAAMC,GAAE,GAAI,MAAMb,KAAK,CAACc,MAAM,CAAE,cAAaH,EAAG,EAAC;QAEjDE,GAAG,CAACE,MAAK,KAAM,GAAE,GAAK,IAAI,CAACR,MAAK,GAAI,IAAI,CAACA,MAAM,CAACS,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACN,EAAC,KAAMA,EAAE,CAAC,GAAIO,KAAK,CAAC,sBAAsB;MACtH;IACJ,CAAC;IACD,MAAMC,QAAQA,CAACC,QAAQ,EAAC;MAEpB,MAAMP,GAAE,GAAI,MAAMb,KAAK,CAACqB,IAAI,CAAE,YAAW,EAAED,QAAQ;MAEnD,IAAGP,GAAG,CAACE,MAAK,KAAM,GAAG,EAAC;QAClBG,KAAK,CAAC,4BAA4B;QAClC,IAAI,CAACX,MAAK,GAAI,CAAC,GAAG,IAAI,CAACA,MAAM,EAAEM,GAAG,CAACP,IAAI;MAC3C;IAEJ,CAAC;IACD,MAAMgB,WAAWA,CAACX,EAAE,EAAC;MAEjB,MAAMY,YAAW,GAAI,MAAM,IAAI,CAACC,UAAU,CAACb,EAAE;MAC7C,MAAMc,SAAQ,GAAI;QAAC,GAAGF,YAAY;QAAEG,MAAM,EAAE,CAACH,YAAY,CAACG;MAAM;MAEhE,MAAMb,GAAE,GAAI,MAAMb,KAAK,CAAC2B,GAAG,CAAE,cAAahB,EAAG,EAAC,EAAEc,SAAS;MAEzD,MAAMnB,IAAG,GAAIO,GAAG,CAACP,IAAG;MAEpB,IAAI,CAACC,MAAK,GAAI,IAAI,CAACA,MAAM,CAACqB,GAAG,CAAGX,KAAK,IAAKA,KAAK,CAACN,EAAC,KAAMA,EAAC,GAAI;QAAC,GAAGM,KAAK;QAAES,MAAK,EAAIpB,IAAI,CAACoB;MAAM,IAAIT,KAAK;IACxG,CAAC;IACD,MAAMY,WAAWA,CAAA,EAAE;MACf,MAAM,IAAI,CAACrB,KAAK,CAACqB,WAAW,CAAC;MAC7B,OAAO,IAAI,CAACrB,KAAK,CAACsB,SAAQ;IAC9B,CAAC;IACD,MAAMN,UAAUA,CAACb,EAAE,EAAC;MAChB,MAAML,IAAG,GAAI,MAAM,IAAI,CAACE,KAAK,CAACgB,UAAU,CAACb,EAAE;MAC3C,OAAO,MAAML,IAAG;IACpB;EACJ,CAAC;EACD,MAAMyB,OAAOA,CAAA,EAAE;IACX,IAAI,CAACxB,MAAK,GAAI,MAAM,IAAI,CAACsB,WAAW,CAAC;EACzC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}